#include <iostream>

using namespace std;

int main()

{
	int num1 = 3;
	float fnum = 3.14f;
	double dnum = 123.1234;

	cout << num1 << endl;
	cout << fnum << endl;
	cout << dnum << endl;
	
	/*
		관계 연산자 : 값대 값을 연산하여 T/F로 결과를 반환.
		(>, < , >=, <=, ==, !=, 등등)
	*/

	cout << "10 < 20\t" << (10 < 20) << endl;
	// 참으로써 1로 출력함

	/*
		논리 연산자 : 참/거짓 대 참/거짓을 연산하여 참/거짓으로 결과를 반환한다.
		AND, OR, NOT
		&&, || , !
	*/
	int Number;

	cout << "숫자를 입력하세요: ";
	cin >> Number;

	cout << (10 < Number && Number <= 20) << endl;

	/*
		비트 연산자
		진수 : 2진수, 8진수, 10진수, 16진수

		2진수 : 0~1
		8진수 : 0~7
		10진수 : 0~9
		16진수 : 0~15 : 0~9 , 10~15 : a~f
		진수들은 서로 다른 진수로 변환이 가능하다.

		87 / 2 = 43 -- 1 (나머지)
		43 / 2 = 31 -- 1
		21 / 2 = 10 -- 1
		10 / 2 = 5 --- 0
		5 / 2 = 2 ---- 1
		2 / 2 = 1 ---- 0
		가장 마지막에 나온 몫부터 역순으로 나머지 값들을 읽는다.
		101 0111이 된다.

		16진수로 변환해보다. 10진수를 바로 16진수로 변환하는 것보다 2진수로 변환한 수에
		16진수로 변환하는 것이 쉽다.

		1010111을 오른쪽으로부터 4자리씩 끊어서 계산한다. 16진수 1자리는 2진수의 4자리이다.
		0101 0111
		8421 8421

		2진수가 1인부분의 값들을 더한다.
		16진수로 57 이 된다.

		여기서 나오는 비트 논리 연산자
		종류 : AND , OR , NOT , XOR
				&	 |	  ~		^

		A	B	XOR (서로 다를 때만 참)
		0	0	0
		1	0	1
		0	1	1
		1	1	0

		53 / 2 = 26 -- 1
		26 / 2 = 13 -- 0
		13 / 2 = 6 --- 1
		6 / 2 = 3 ---- 0
		3 / 2 = 1 ---- 1
	*/

	/*
		87 & 53
		87 : 1010111
		53 : 110101

		먼저 위처럼 2진수로 바꾼 후 2진수 각 자리별로 논리연산을 실행
		 1010111
		&0110101
		 0010101
		이를 10진수로 반환시 21
	*/

	cout << "87 & 53  " << (87 & 53) << endl;

	/*
		87 | 53
		87 : 1010111
		53 : 110101

		먼저 위처럼 2진수로 바꾼 후 2진수 각 자리별로 논리연산을 실행
		 1010111
		|0110101
		 1110111
		이를 10진수로 반환시 
	*/

	cout << "87 | 53  " << (87 | 53) << endl;

	// 게임에서 버프를 저장하는 등에서 논리 연산자를 쓸 수 있다!
	

	return 0;
}

